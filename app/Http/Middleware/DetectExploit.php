namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use App\Models\ThreatLog;

class DetectExploit
{
    public function handle(Request $request, Closure $next)
    {
        $input = $request->all();
        $patterns = [
            'SQL Injection' => '/(\%27)|(\')|(\-\-)|(\%23)|(#)/i',
            'XSS' => '/<script\b[^>]*>(.*?)<\/script>/is',
            'CSRF' => '/_token/i',
        ];

        foreach ($input as $key => $value) {
            foreach ($patterns as $type => $pattern) {
                if (preg_match($pattern, $value)) {
                    ThreatLog::create([
                        'ip' => $request->ip(),
                        'endpoint' => $request->path(),
                        'payload' => $value,
                        'type' => $type,
                    ]);
                }
            }
        }

        return $next($request);
    }
}
